{"version":3,"sources":["Components/CartItem.js","Components/BuyPage.js","Components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["cartItem","product","addInCart","Card","className","CardImg","top","height","width","src","smallImage","CardBody","CardTitle","productName","CardText","productPrice","Button","color","onClick","BuyPage","useState","setProduct","fetchPhotos","a","Axios","get","header","Authorization","data","results","allProduct","map","result","urls","regular","tinyImage","thumb","random","word","commerce","price","id","uuid","useEffect","Container","fluid","Row","Col","md","CartItem","Cart","removeItem","buyNow","amount","forEach","item","parseFloat","ListGroup","ListGroupItem","length","CardHeader","CardFooter","App","setCartItem","findIndex","array","toast","type","filter","singleItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6077d743.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n    Button\r\n} from \"reactstrap\";\r\n\r\nconst cartItem = ({product, addInCart}) => {\r\nreturn (\r\n    <Card className = \"mt-2 mb-1\">\r\n        <CardImg\r\n        top\r\n        height=\"250\"\r\n        width=\"100%\"\r\n        src= {product.smallImage}\r\n        />\r\n        <CardBody className=\"text-center\">\r\n            <CardTitle>{product.productName}</CardTitle>\r\n            <CardText className=\"bg-secondary\">price: Rs{product.productPrice}</CardText>\r\n            <Button color=\"success\" onClick={() => addInCart(product)}>\r\n                Buy Now\r\n            </Button>\r\n        </CardBody>\r\n    </Card>\r\n);\r\n\r\n};\r\n\r\nexport default cartItem;","import React, {useState, useEffect} from \"react\";\r\nimport  Axios from \"axios\";\r\nimport { random, commerce } from \"faker\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst apiKey = \"5ROhGYwUt8yWEwq9T3-ZRILb8n1OTtVu0KveRiJufEg\"\r\n\r\nconst url = \"https://api.unsplash.com/search/photos/?client_id=5ROhGYwUt8yWEwq9T3-ZRILb8n1OTtVu0KveRiJufEg&query=laptop&per_page=6&page=1\"\r\n\r\n\r\nconst BuyPage = ({addInCart}) => {\r\n    const [product, setProduct] = useState([])\r\n\r\n    const fetchPhotos = async() => {\r\n        const {data} = await Axios.get(url, {\r\n            header:{\r\n                Authorization: apiKey \r\n            }\r\n        });\r\n\r\n    const { results } = data;\r\n\r\n    const allProduct = results.map(result => ({\r\n        smallImage: result.urls?.regular,\r\n        tinyImage: result.urls?.thumb,\r\n        productName: random.word(),\r\n        productPrice: commerce.price(),\r\n        id: random.uuid()\r\n       }));\r\n\r\n       setProduct(allProduct);\r\n    \r\n    };\r\n\r\n        useEffect(() => {\r\n            fetchPhotos();\r\n        }, []);\r\n\r\n    return(\r\n        <Container fluid>\r\n            <h1 className = \"text-success text-center\"> \r\n                Buy page\r\n            </h1>\r\n            <Row>\r\n                {product.map(product => (\r\n                   <Col md={4} key={product.id}>\r\n                        <CartItem product={product} addInCart={addInCart}/>\r\n                   </Col>\r\n                ))};\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default BuyPage;","import React from \"react\";\r\nimport {\r\n    Container,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Button,\r\n    CardBody,\r\n    CardHeader,\r\n    Card,\r\n    CardFooter,\r\n    Col,\r\n    Row\r\n} from \"reactstrap\";\r\n\r\nconst Cart = ({cartItem, removeItem, buyNow}) => {\r\n    let amount = 0;\r\n\r\n    cartItem.forEach(item =>{\r\n        amount = parseFloat(amount) + parseFloat(item.productPrice)\r\n    });\r\n\r\n    return (\r\n        <Container fluid>\r\n            <h1 className=\"text-success\">Your Cart</h1>\r\n            <ListGroup>\r\n                {cartItem.map(item => (\r\n                    <ListGroupItem key={item.id}>\r\n                        <Row>\r\n                            <Col>\r\n                                <img height = {80} src = {item.tinyImage}/>\r\n                                <Col className=\"text-center\">\r\n                                    <div className=\"text-primary\">\r\n                                        {item.productName}\r\n                                    </div>\r\n                                    <span>price:- {item.productPrice}</span>\r\n                                    <Button color=\"danger\" onClick={()=> removeItem(item)}>Remove</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                ))}\r\n            </ListGroup>\r\n            {/*If Every everything is right*/}\r\n             {\r\n                 cartItem.length >=1 ? (\r\n                    <card className=\"text-center mt-3\">\r\n                        <CardHeader>\r\n                            Grand Total\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            Your amount for {cartItem.length} product is {amount}\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color = \"success\" onClick ={buyNow}>Pay Here</Button>\r\n                        </CardFooter>\r\n                    </card>\r\n                 ) : (\r\n                     <h1 className=\"text-warning\">Cart is empty</h1>\r\n                 ) \r\n             }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Cart;","import React,{useState} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport './App.css';\nimport {Container, Row, Col} from \"reactstrap\";\nimport {toast, ToastContainer } from 'react-toastify';\nimport BuyPage from './Components/BuyPage';\nimport Cart from \"./Components/Cart\";\n\nfunction App() {\n\n  const [cartItem, setCartItem] = useState([])\n\n  const addInCart = item => {\n    const isAlreadyAdded = cartItem.findIndex(function(array){\n      return array.id === item.id\n    });\n     \n    if (isAlreadyAdded !== -1) {\n      toast(\"Already add in cart!\", {\n        type: \"error\"\n      });\n      return;\n    };\n\n    setCartItem([...cartItem, item])\n  };\n\n  const buyNow = () => {\n    setCartItem([]);\n    toast(\"Purchase Completed\",{\n      type: \"success\"\n    });\n  };\n\n  const removeItem = item => {\n    setCartItem(cartItem.filter(singleItem => singleItem.id !== item.id))\n  };\n\n\n  return (\n    <Container fluid>\n      <ToastContainer/>\n      <Row>\n        <Col md ={8}>\n          <BuyPage addInCart={addInCart}/>\n        </Col>\n        <Col md={4}>\n        <Cart cartItem = {cartItem} removeItem ={removeItem} buyNow ={buyNow}/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}